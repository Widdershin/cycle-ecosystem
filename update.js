import request from 'request';
import {Observable} from 'rxjs';
import fs from 'fs';

const RELEVANCE_THRESHOLD = 0.75;
const githubSearchQuery = `cycle+OR+cyclejs+language%3AJavaScript+created%3A>2014-11-01+stars%3A>3&type=Repositories&sort=stars&order=desc&per_page=1000`;
const irrelevantRepos = fs.readFileSync('./irrelevant-repos.txt', 'utf8').split('\n');

function githubApiSearch (query) {
  return `https://api.github.com/search/repositories?q=${query}`;
}

function githubSearch (query) {
  return `https://github.com/search?q=${query}`;
}

const requestOptions = {
  url: githubApiSearch(githubSearchQuery),
  headers: {
    'User-Agent': 'cycle-ecosystem'
  }
};

Observable.bindCallback(request)(requestOptions)
  .map(([error, response]) => JSON.parse(response.body).items)
  .map(relevance)
  .map(toMarkdown)
  .forEach(updateReadme);

function relevance (searchResults) {
  return searchResults.filter(result => {
    return result.score >= RELEVANCE_THRESHOLD &&
      irrelevantRepos.find(irrelevantRepo => irrelevantRepo === result.full_name) === undefined;
  });
}

function toMarkdown (searchResults) {
  return `
# cycle-ecosystem
What are the most popular libraries for Cycle.js?

| Name     | Description       | Stars |
| -------- | ----------------- | ------|
${searchResults.map(toMarkdownEntry).join('\n')}

Auto generated by update.js by [searching Github](${githubSearch(githubSearchQuery)}).

If you spot an entry that doesn't look related to Cycle.js, it would be awesome if you make a pull request that adds the repo name to \`irrelevant-repos.txt\`.
`;
}

function toMarkdownEntry (result) {
  return `| [${result.full_name}](${result.html_url}) | ${result.description} | ${result.stargazers_count} |`;
}

function updateReadme (markdown) {
  fs.writeFile('./README.md', markdown);
}
